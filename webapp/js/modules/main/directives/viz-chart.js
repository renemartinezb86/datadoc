define(['./module','highcharts','chartCommons','leaflet','lodash','angular','common','latlon-geohash'],function(directives,Highcharts,chartC,L,_,angular,cc,Geohash){directives.directive('vizChart',[function(){return{restrict:'A',templateUrl:'static/templates/include/viz-directives/viz-chart.html',controller:['$scope','$timeout','$filter','$compile','$q','CodesService','$http','ExportService','DataLoadingService',function($scope,$timeout,$filter,$compile,$q,CodesService,$http,ExportService,DataLoadingService){function transformNamedData(groups,columns,allData){if(!columns.length)return[];var group=groups[0],aggIndex=chartC.getAggIndex(groups,$scope.dataSummary.aggs),col=_.find(columns,'active')||columns[0];return[{name:col.name,key:col.key,data:_(allData).filter(function(o){return!col.operation||$scope.getTreeLevel(o)==aggIndex}).map(function(o){return{name:o.aggregation||o[group.field],y:+o[col.key],o:o}}).filter(function(o){return o.y}).value()}]}function getYAxisData(columns){var yAxis={};if($scope.vizSummary.enabledMultiAxis){var i=0;yAxis=_.map(columns,function(col){var name=chartC.getFullName(col),color=Highcharts.getOptions().colors[i];return{labels:{style:{color:color},useHtml:!0},title:{text:name,style:{color:color}},opposite:!(i++%2)}})}return yAxis}function transformData(groups,columns,segments,allData){console.time('segmenting');var aggIndex=chartC.getAggIndex(groups,$scope.dataSummary.aggs),col=_.find(columns,'active')||columns[0];if(segments.length){var segmentIndex=chartC.getAggIndex(segments,$scope.dataSummary.aggs),segmentData=_.filter(allData,{__treeLevel:$scope.dataSummary.showAggregationTotal?segmentIndex+1:segmentIndex}),counts=_.countBy(segmentData,function(o){return o[segments[0].key]}),topCounts=[];_.forIn(counts,function(count,value){topCounts.push({name:value,count:count})});var useOther=!1;10<topCounts.length&&(useOther=!0),_.sortBy(topCounts,'count'),topCounts=_.take(topCounts,10),useOther&&topCounts.push({name:'$$other'});var segmentsData={};_.each(topCounts,function(s){segmentsData[s.name]=[]});for(var o,currentItem={$$other:{value:0,o:{}}},copyCurrent=function(){_.forIn(segmentsData,function(data,segment){data.push(currentItem[segment])})},i=0;i<allData.length;i++)if(o=allData[i],$scope.getTreeLevel(o)==aggIndex&&0<i)copyCurrent(),currentItem={$$other:{value:0,o:{}}};else if($scope.getTreeLevel(o)==segmentIndex&&col&&o[col.key]){currentItem.$$other.o[groups[0].key]=o[groups[0].key];var segment=o[segments[0].key],value=o[col.key];segmentsData[segment]?currentItem[segment]={value:value,o:o}:currentItem.$$other.value+=value}0<i&&copyCurrent();var a=_.map(topCounts,function(s){var name='$$other'==s.name?'Other':s.name;return{name:name,key:segments[0].key,data:_.map(segmentsData[s.name],function(o){return{name:name,otherChart:'$$other'==s.name,y:o?parseFloat(o.value):null,o:o?o.o:null}})}});return console.timeEnd('segmenting'),a}var i=0;return _.map(columns,function(col){var type,name=chartC.getFullName(col);switch($scope.vizSummary.seriesType[col.key]){case CHART_TYPES.LINE:type='line';break;case CHART_TYPES.AREA:type='area';break;case CHART_TYPES.COLUMN:type='column';}var obj={name:name,type:type,key:col.key,data:_(allData).filter(function(o){return!col.operation||$scope.getTreeLevel(o)==aggIndex}).map(function(o){return{name:name,y:o[col.key]?parseFloat(o[col.key]):null,o:o}}).value()};return $scope.vizSummary.enabledMultiAxis&&(obj=_.merge(obj,{yAxis:i++})),obj})}function getCategories(groups,allData){if(groups.length){var aggIndex=chartC.getAggIndex(groups,$scope.dataSummary.aggs);return _(allData).filter(function(o){return $scope.getTreeLevel(o)==aggIndex}).map(function(o){return o[groups[0].field]||o.aggregation}).value()}return[]}function getCategoriesFromRawData(xAxisItems,allData,yAxisItems){if($scope.vizSummary.chartType!=CHART_TYPES.SCATTER&&xAxisItems.length)return _(allData).map(function(o){return o[xAxisItems[0].field]||o.aggregation}).uniq().value();if($scope.vizSummary.chartType==CHART_TYPES.SCATTER){var str;return str=$scope.dataSummary.aggs.length?[xAxisItems[0].showListView+' '+xAxisItems[0].name+' & '+yAxisItems[0].showListView+' '+yAxisItems[0].name]:[xAxisItems[0].showListView+' & '+yAxisItems[0].showListView],str}}function transformScatteredData(groups,columns,allData){var categories=getCategoriesFromRawData(groups,allData,columns),obj=_.map(categories,function(cat){var col1=groups[0],col2=columns[0],catData=_(allData).map(function(o){if(o[col1.key]&&o[col2.key])return{x:parseFloat(o[col1.key].toFixed(2)),y:parseFloat(o[col2.key].toFixed(2)),o:o}}).value();return _.remove(catData,function(o){return'undefined'==typeof o}),{name:''+cat,data:_.sortBy(catData,function(o){return o.x})}});if(null!=$scope.vizSummary.regressionType){var col1=groups[0],col2=columns[0];_.remove(allData,function(o){return null==o[col1.key]||null==o[col2.key]});var regressiveObj=_.map(categories,function(){var catData=_(allData).map(function(o){return[o[col1.key],o[col2.key]]}).value(),type=$scope.REGRESSION_TYPE_OPTIONS[$scope.vizSummary.regressionType].desc.toLowerCase(),regData=regression(type,catData),data=_.sortBy(_.map(regData.points,function(o,i){return{x:!isNaN(o[0])&&angular.isNumber(o[0])?+o[0].toFixed(2):o[0],y:!isNaN(o[1])&&angular.isNumber(o[1])?+o[1].toFixed(2):o[1],o:allData[i]}}),'x');return data.length?chartC.calculateCoordsForRegressions(data,$scope.vizSummary.regressionType,regData,allData):{name:'Loading...'}});obj.push(regressiveObj[0])}return obj}function tooltipHTML(){return'<div ng-mousemove="$event.stopPropagation()" class="custom-tooltip">\n    <div class="tooltip-header">\n        <span><strong ng-bind="chartTooltip.mapData.name"></strong> : {{chartTooltip.mapData.value}}</span>\n    </div>\n    <div>\n        <div class="dropdown-menu-right">\n            <div class="dropdown-submenu">\n                <div class="drill-in-menu-item" ng-click="$event.stopPropagation()"><strong>Drill in</strong> by</div>\n                <ul class="dropdown-menu drill-in-menu" ng-style="{\'border-color\': chartTooltip.color}">\n                    <li ng-repeat="intoColumn in filterList" ng-if="intoColumn.name != chartTooltip.byColumn.name">\n                        <a ng-click="drillDown(chartTooltip.byColumn, chartTooltip.byValue, intoColumn, true, chartTooltip.row)"\n                           class="drill-in-menu-item">\n                            {{humanize(intoColumn.name)}}</a>\n                    </li>\n                </ul>\n            </div>\n            <div class="drill-in-menu-item" ng-click="selectFromResults(chartTooltip.byColumn, chartTooltip.byValue, false, chartTooltip.row)">\n                <strong>Filter</strong> to value\n            </div>\n            <div class="drill-in-menu-item" ng-click="selectFromResultsRemove(chartTooltip.byColumn, chartTooltip.byValue, chartTooltip.row)">\n                <strong>Exclude</strong> this value\n            </div>\n            <div class="drill-in-menu-item" ng-click="openModalFromTooltip(chartTooltip)">\n                <strong>View</strong> data\n            </div>\n        </div>\n    </div>\n</div>'}function transformLatLonMapData(groups,columns,data){var popup=L.popup({closeButton:!1,className:'map-popup',maxWidth:500}).setContent($compile(angular.element(tooltipHTML()))($scope)[0]);return _(data).filter(function(o){return o[groups[0].field]}).map(function(o){var coors;$scope.dataSummary.aggs.length?(coors=Geohash.decode(o[groups[0].field]),coors={lat:coors.lat,lon:coors.lon}):coors={lat:o[groups[0].field][0],lon:o[groups[0].field][1]};var marker=L.marker(new L.LatLng(coors.lat,coors.lon),{data:o});return marker.bindPopup(popup),marker.on('click',function(){$scope.$apply(function(){var key=_.find($scope.gridApi.grid.columns,{name:groups[0].field});$scope.chartTooltip.popup=popup,$scope.chartTooltip.viewData=!1,$scope.chartTooltip.values=_.map($scope.gridOptions.columnDefs,function(col){var value=o[col.name];return{name:col.displayName,value:value}}),$scope.chartTooltip.row=key?void 0:{entity:o},$scope.chartTooltip.byColumn=key,$scope.chartTooltip.byValue=o[groups[0].field];var name=o.aggregation||o[$scope.vizSummary.xAxisShows[0].key];Array.isArray(name)&&(name=name[0].toFixed(2)+', '+name[1].toFixed(2)),$scope.chartTooltip.mapData={name:name,value:o[$scope.vizSummary.yAxisShows[0].key]}}),$timeout(function(){popup.update()})}),marker}).value()}function getCommonCountryCodesData(codeKey,valueKey,data){return _.map(data,function(el){var code=el[codeKey];return code.toUpperCase()!=code&&(code=code.toUpperCase()),3!=code.length&&(code=CodesService.getReverseCode(code)),{code:code,value:el[valueKey],o:el,key:codeKey}})}function transformAreasMapData(codeType,groups,columns,allData){var mapType,data,deferred=$q.defer(),col=_.find(columns,'active')||columns[0],codeKey=groups[0].field,valueKey=col.key,aggIndex=chartC.getAggIndex(groups,$scope.dataSummary.aggs);switch(codeType){case'location_usa_state_codes':mapType='us-states';break;case'location_country_codes':mapType='countries';break;default:throw'Unknow map type: '+codeType;}return data=_.filter(allData,function(o){return!col.operation||$scope.getTreeLevel(o)==aggIndex}),data='location_country_codes'==codeType?getCommonCountryCodesData(codeKey,valueKey,data):_.map(data,function(el){return{code:el[codeKey].toUpperCase(),value:el[valueKey],o:el,key:codeKey}}),$http.get('static/geo/maps/'+mapType+'.geo.json',{cache:!0}).success(function(areasData){function getColor(d){return d?range[_Mathfloor((d-minValue)/delta*(range.length-1))]:void 0}function round(value){if(1<value){var c=10;return Math.round(value/c)*c}return value}function highlightFeature(e){var layer=e.target;layer.setStyle({weight:4,color:'#aaa',dashArray:''}),L.Browser.ie||L.Browser.opera||layer.bringToFront(),info.update(layer.feature.properties)}function resetHighlight(e){geojson.resetStyle(e.target),info.update()}var info=L.control();info.onAdd=function(){return this._div=L.DomUtil.create('div','map-info detailed'),this.update(),this._div},info.update=function(props){this._div.innerHTML='<h4>'+col.showName+'</h4>'+(props?'<b>'+props.name+'</b><br />'+(props.value?props.value:'-'):'Hover over a '+('location_country_codes'==codeType?'country':'state'))};var range=[],minValue=round(_.min(data,'value').value),maxValue=round(_.max(data,'value').value);maxValue==minValue&&(maxValue+=100);var delta=maxValue-minValue,popup=L.popup({closeButton:!1,className:'map-popup',maxWidth:500}).setContent($compile(angular.element(tooltipHTML()))($scope)[0]);_.each(areasData.features,function(feature){var key=feature['id'],o=_.find(data,{code:key});_.merge(feature,{properties:{o:o?o.o:void 0,key:o?o.key:void 0,value:o?o.value:void 0}})});var geojson=L.geoJson(areasData,{style:function(feature){return{weight:2,opacity:1,color:'white',dashArray:'3',fillOpacity:feature.properties.value?.7:0,fillColor:getColor(feature.properties.value)}},onEachFeature:function(feature,layer){layer.on({mouseover:highlightFeature,mouseout:resetHighlight,click:function click(){feature.properties.o&&$scope.$apply(function(){var key=_.find($scope.gridApi.grid.columns,{name:feature.properties.key});$scope.chartTooltip.popup=popup,$scope.chartTooltip.viewData=!1,$scope.chartTooltip.color='',$scope.chartTooltip.values=_.map($scope.gridOptions.columnDefs,function(col){var value=feature.properties.o[col.name];return{name:col.displayName,value:value}}),$scope.chartTooltip.row=key?void 0:{entity:feature.properties.o},$scope.chartTooltip.byColumn=key,$scope.chartTooltip.byValue=feature.properties.o[feature.properties.key],$scope.chartTooltip.mapData={name:feature.properties.name,value:feature.properties.value}})}}),feature.properties.value&&layer.bindPopup(popup)}}),legend=L.control({position:'bottomright'});legend.onAdd=function(){var from,to,i,div=L.DomUtil.create('div','map-info legend'),grades=[],labels=[],total=8,step=(maxValue-minValue)/total;for(i=0;i<total;i++)grades.push(round(minValue+i*step));for(i=0;i<grades.length;i++)from=grades[i],to=grades[i+1],labels.push('<i style="background:'+getColor(from+1)+'"></i> '+from+(to?'&ndash;'+to:'+'));return div.innerHTML=labels.join('<br>'),div},deferred.resolve([geojson,legend,info])}),deferred.promise}var chart,map,mapChoropleth,mapMarkers,_Mathfloor=Math.floor,defaultChartOptions=chartC.defaultChartOptions(!1,$scope,$timeout,$filter,!0),bounds=L.latLngBounds(L.latLng(-90,-180),L.latLng(90,180)),CHART_TYPES=chartC.CHART_TYPES;$scope.CHART_TYPE_OPTIONS=cc.getViewModeOptions();var ctrlNames=cc.getCtrlNames(),getZoom=function(event){return event.target._zoom},getPrecisionForZoom=function(zoom){return 3>=zoom?1:5>=zoom?2:7>=zoom?3:9>=zoom?4:11>=zoom?5:14>=zoom?6:18>=zoom?7:20>=zoom?9:10},getRectangle=function(zoom,bbox){if(2<zoom)return{top_left:{lat:bbox._northEast.lat,lon:bbox._southWest.lng},bottom_right:{lat:bbox._southWest.lat,lon:bbox._northEast.lng}}},setZoom=_.debounce(function(event){var codeType=$scope.colsTypes[$scope.vizSummary.xAxisShows[0].field].toLowerCase(),agg=$scope.dataSummary.aggs[0];if(agg)if('location_lat_lon'==codeType){var zoom=getZoom(event),precision=getPrecisionForZoom(zoom);precision!=$scope.dataSummary.aggs[0].precision&&($scope.dataSummary.aggs[0].precision=precision,agg.box=getRectangle(zoom,map.getBounds()),$scope.searching())}else agg.box=void 0},500),setPan=_.debounce(function(event){var codeType=$scope.colsTypes[$scope.vizSummary.xAxisShows[0].field].toLowerCase(),agg=$scope.dataSummary.aggs[0];'undefined'!=typeof agg&&('location_lat_lon'==codeType?(agg.box=getRectangle(getZoom(event),map.getBounds()),$scope.searching()):agg.box=void 0)},500);$scope.getTreeLevel=function(o){return $scope.dataSummary.showAggregationTotal?o.__treeLevel-1:o.__treeLevel},$scope.resizeChart=function(){if(chart&&chart.xAxis&&$scope.vizSummary.chartType!=CHART_TYPES.TABLE&&$scope.vizSummary.chartType!=CHART_TYPES.LIST)if($scope.vizSummary.chartType!=CHART_TYPES.MAP&&$scope.vizSummary.yAxisShows.length){var $parent=$(chart.container).parent();chart.setSize($parent.width(),$parent.height(),!1)}else map.invalidateSize()},$scope.setActive=function(key){$scope.vizSummary.yAxisShows.forEach(function(el){el.active=el.key==key})},$scope.createChartTotals=function(){$scope.vizSummary.yAxisShows.length&&!_.some($scope.vizSummary.yAxisShows,{active:!0})&&$scope.setActive($scope.vizSummary.yAxisShows[0].key),$scope.chartTotals=_.map($scope.vizSummary.yAxisShows,function(show){return $scope.totals?{name:chartC.getFullName(show),key:show.key,show:show,total:$scope.totals[show.key]}:{}})},getAllRowsData=function(_getAllRowsData){function getAllRowsData(){return _getAllRowsData.apply(this,arguments)}return getAllRowsData.toString=function(){return _getAllRowsData.toString()},getAllRowsData}(function(nodes){var arr=_.map(nodes,function(node){return _.omit(node,'$$children')});return _.forEach(nodes,function(node){node.$$children.length&&(arr=arr.concat(getAllRowsData(node.$$children)))}),arr}),$scope.updateChart=function(){function applyChartType(type,groups,cols,segments,data,chartOptions){function generateDataForPieChart(data){if(data[0].data=_.sortByOrder(data[0].data,['y'],['desc']),10<data[0].data.length){var otherData=data[0].data.slice(10);data[0].data=data[0].data.slice(0,10),data[0].data.push({name:'Other',y:_.sum(otherData,function(n){return n.y}),otherChart:!0,color:'rgb('+_Mathfloor(200*Math.random())+', '+_Mathfloor(200*Math.random())+', '+_Mathfloor(200*Math.random())+')'})}return data}function applyNamedData(options){return _.merge({},options,{series:generateDataForPieChart(transformNamedData(groups,cols,data))})}function applyData(options){return _.merge({},options,{yAxis:getYAxisData(cols),series:transformData(groups,cols,segments,data)})}function applyDataWithCategories(options){return _.merge({},options,{xAxis:{categories:getCategories(groups,data)},yAxis:getYAxisData(cols),series:transformData(groups,cols,segments,data)})}function applyScatteredData(options){var col1=groups[0],col2=cols[0];return _.merge({},options,{xAxis:{title:{enabled:!0,text:col1.name}},yAxis:{title:{text:col2.name}},series:transformScatteredData(groups,cols,data)})}if(type!==CHART_TYPES.MAP&&!_.isEmpty($scope.dataSummary.aggs)){var agg=$scope.dataSummary.aggs[0];agg.box&&(delete agg.box,$scope.searching())}switch(type){case CHART_TYPES.COLUMN:return _.merge({},applyDataWithCategories(chartOptions),{chart:{type:'column',zoomType:'x',panning:!0,panKey:'shift'},plotOptions:{column:{stacking:segments.length?'normal':null}}});case CHART_TYPES.BAR:return _.merge({},applyDataWithCategories(chartOptions),{chart:{type:'bar',zoomType:'x',panning:!0,panKey:'shift'},plotOptions:{series:{stacking:segments.length?'normal':null}},scrollbar:{enabled:!1},navigator:{enabled:!1}});case CHART_TYPES.LINE:return _.merge({},applyData(chartOptions),{chart:{type:'line',zoomType:'x',panning:!0,panKey:'shift'},plotOptions:{line:{stacking:segments.length?'normal':null}}});case CHART_TYPES.AREA:return _.merge({},applyData(chartOptions),{chart:{type:'area',zoomType:'x',panning:!0,panKey:'shift'},plotOptions:{area:{stacking:segments.length?'normal':null}}});case CHART_TYPES.PIE:return _.merge({},applyNamedData(chartOptions),{chart:{type:'pie'},plotOptions:{series:{allowPointSelect:!0,cursor:'pointer'}},scrollbar:{enabled:!1},navigator:{enabled:!1}});case CHART_TYPES.SCATTER:return _.merge({},applyScatteredData(chartOptions),{chart:{type:'scatter',zoomType:'x'}});case CHART_TYPES.TABLE:case CHART_TYPES.LIST:break;default:throw'Unknown chart type: '+type;}}if(!($scope.popupData&&$scope.popupData.is)){var groups=_.filter($scope.vizSummary.xAxisShows,function(s){return'$$row_number'!=s.field}),cols=$scope.vizSummary.yAxisShows,segments=$scope.vizSummary.segmentBy,data=$scope.dataSummary.aggs.length?$scope.getAllRowsData($scope.gridOptions.rowData):$scope.gridOptions.data;if(0<$scope.vizSummary.graphLimit)if($scope.dataSummary.aggs.length&&$scope.vizSummary.xAxisShows.length){var aggIndex=chartC.getAggIndex($scope.vizSummary.xAxisShows,$scope.dataSummary.aggs),i=0;data=_.takeWhile(data,function(o){return $scope.getTreeLevel(o)!=aggIndex||i++<$scope.vizSummary.graphLimit})}else data=_.take(data,$scope.vizSummary.graphLimit);if(!$scope.isAllowedDataForChartType($scope.vizSummary.chartType,$scope,$scope.colsTypes))return $scope.chartDisabled={message:cc.getViewModeOptions()[$scope.vizSummary.chartType].e},void($scope.inRequestViz=!1);if($scope.vizSummary.yAxisShows.length&&$timeout(function(){'embedPopupCtrl'!=$scope.controllerName&&$scope.resizeChart()},100),$scope.chartDisabled=null,($scope.isArray=function(str){return _.isArray(str)},$scope.linksArrayForList=function(arr){return cc.linksArrayForList(arr)},$scope.createChartTotals(),$scope.vizSummary.chartType==CHART_TYPES.MAP)){var codeType=$scope.colsTypes[groups[0].field].toLowerCase();if('location_lat_lon'==codeType){var newMapMarkers,markers=transformLatLonMapData(groups,cols,data);newMapMarkers=$scope.dataSummary.aggs.length?new L.MarkerClusterGroup({singleMarkerMode:!0,disableClusteringAtZoom:1,iconCreateFunction:function iconCreateFunction(cluster){var markers=cluster.getAllChildMarkers(),childCount=markers[0]?markers[0].options.data.$$cluster_size:1,c=' marker-cluster-';return c+=10>childCount?'small':100>childCount?'medium':'large',new L.DivIcon({html:'<div><span>'+childCount+'</span></div>',className:'marker-cluster'+c,iconSize:new L.Point(40,40)})}}):L.markerClusterGroup(),newMapMarkers.addLayers(markers),mapChoropleth&&_.each(mapChoropleth,function(l){l.remove()}),mapMarkers&&map.removeLayer(mapMarkers),mapMarkers=newMapMarkers,map.addLayer(mapMarkers)}else transformAreasMapData(codeType,groups,cols,data).then(function(newMapChoropleth){mapChoropleth&&_.each(mapChoropleth,function(l){l.remove()}),mapMarkers&&map.removeLayer(mapMarkers),mapChoropleth=newMapChoropleth,_.each(mapChoropleth,function(l){l.addTo(map)}),'location_usa_state_codes'==codeType?map.setView([37.8,-96],4):'location_country_codes'==codeType&&map.setView(new L.LatLng(0,0),2)});$scope.inRequestViz=!1}else{$scope.chartOptions=applyChartType($scope.vizSummary.chartType,groups,cols,segments,data,{});var mergedOpt=_.merge({},defaultChartOptions,$scope.chartOptions);chart=new Highcharts.StockChart(mergedOpt)}}},$scope.onVizResultsResize=function(size){$scope.vizSummary.chartType!=CHART_TYPES.TABLE&&$scope.vizSummary.chartType!=CHART_TYPES.LIST&&($scope.vizSummary.chartType!=CHART_TYPES.MAP&&$scope.vizSummary.yAxisShows.length?chart.setSize(size.width,size.height,!1):map.invalidateSize())},$scope.exportData=function(e,type){e.stopPropagation(),e.preventDefault(),$scope.exportPopup&&($scope.exportPopup.isopen=!$scope.exportPopup.isopen),'CSV'==type||'XLS'==type?($scope.isExportRunning=!0,ExportService.prepareExport(type,$scope,!0)):chart.exportChart({type:type})},$scope.updateChartSize=function(){if(chart){var $parent=$(chart.container).parent();chart.setSize($parent.width(),$parent.height(),!1)}},$scope.isAllowedDataForChartType=chartC.isAllowedDataForChartType,$scope.toggleMultiAxis=function(){$scope.vizSummary.enabledMultiAxis=!$scope.vizSummary.enabledMultiAxis,$scope.updateChart()},$scope.xAxisShowMeOnRemove=function(item){_.remove($scope.vizSummary.xAxisShows,{key:item.key}),$scope.chartDisabled=null,$timeout(function(){$scope.vizSummary.yAxisShows.length&&$scope.resizeChart()},100),$scope.updateChart()},$scope.xAxisShowMeOnSelect=function(item){$scope.vizSummary.xAxisShows=[item],$scope.updateChart(),$scope.controllerName==ctrlNames.VIZ},$scope.yAxisShowMeOnRemove=function(item){_.remove($scope.vizSummary.yAxisShows,{key:item.key}),$scope.updateChart()},$scope.yAxisShowMeOnSelect=function(item){$scope.vizSummary.chartType==CHART_TYPES.SCATTER&&($scope.vizSummary.yAxisShows=[item]),$scope.updateChart()},$scope.segmentByOnRemove=function(){$scope.vizSummary.segmentBy=[],$scope.updateChart()},$scope.segmentByOnSelect=function(item){$scope.vizSummary.segmentBy=[item],_.remove($scope.dataSummary.aggs,{key:item.key});var xIndex=_.findIndex($scope.dataSummary.aggs,{key:$scope.vizSummary.xAxisShows[0].key});$scope.dataSummary.aggs.splice(xIndex+1,0,item),DataLoadingService.resetAggs($scope.dataSummary.aggs,$scope),$scope.vizSummary.chartType=CHART_TYPES.COLUMN,$scope.vizSummary.seriesType={},$scope.saveColumnDefs(),$scope.expandOnDrillDown=!0,$scope.searching()}}]}}])});
//# sourceMappingURL=../../../maps/modules/main/directives/viz-chart.js.map
