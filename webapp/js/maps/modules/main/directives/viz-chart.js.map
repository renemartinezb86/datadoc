{"version":3,"sources":["modules/main/directives/viz-chart.js"],"names":["define","directives","Highcharts","chartC","L","_","angular","cc","Geohash","directive","restrict","templateUrl","controller","$scope","$timeout","$filter","$compile","$q","CodesService","$http","ExportService","DataLoadingService","transformNamedData","groups","columns","allData","length","group","aggIndex","getAggIndex","dataSummary","aggs","col","find","name","key","data","filter","o","operation","getTreeLevel","map","aggregation","field","y","value","getYAxisData","yAxis","vizSummary","enabledMultiAxis","i","getFullName","color","getOptions","colors","labels","style","useHtml","title","text","opposite","transformData","segments","console","time","segmentIndex","segmentData","showAggregationTotal","counts","countBy","topCounts","forIn","count","push","useOther","sortBy","take","segmentsData","each","s","currentItem","copyCurrent","segment","a","otherChart","parseFloat","timeEnd","type","seriesType","CHART_TYPES","LINE","AREA","COLUMN","obj","merge","getCategories","getCategoriesFromRawData","xAxisItems","yAxisItems","chartType","SCATTER","uniq","str","showListView","transformScatteredData","categories","cat","col1","col2","catData","x","toFixed","remove","regressionType","regressiveObj","REGRESSION_TYPE_OPTIONS","desc","toLowerCase","regData","regression","points","isNaN","isNumber","calculateCoordsForRegressions","tooltipHTML","transformLatLonMapData","popup","closeButton","className","maxWidth","setContent","element","coors","decode","lat","lon","marker","LatLng","bindPopup","on","$apply","gridApi","grid","chartTooltip","viewData","values","gridOptions","columnDefs","displayName","row","entity","byColumn","byValue","xAxisShows","Array","isArray","mapData","yAxisShows","update","getCommonCountryCodesData","codeKey","valueKey","el","code","toUpperCase","getReverseCode","transformAreasMapData","codeType","mapType","deferred","defer","get","cache","success","areasData","getColor","d","range","minValue","delta","round","c","Math","highlightFeature","e","layer","target","setStyle","weight","dashArray","Browser","ie","opera","bringToFront","info","feature","properties","resetHighlight","geojson","resetStyle","control","onAdd","_div","DomUtil","create","props","innerHTML","showName","min","maxValue","max","features","geoJson","opacity","fillOpacity","fillColor","onEachFeature","mouseover","mouseout","click","legend","position","from","to","div","grades","total","step","join","resolve","promise","chart","mapChoropleth","mapMarkers","floor","defaultChartOptions","bounds","latLngBounds","latLng","CHART_TYPE_OPTIONS","getViewModeOptions","ctrlNames","getCtrlNames","getZoom","event","_zoom","getPrecisionForZoom","zoom","getRectangle","bbox","top_left","_northEast","_southWest","lng","bottom_right","setZoom","debounce","colsTypes","agg","precision","box","getBounds","searching","setPan","__treeLevel","resizeChart","xAxis","TABLE","LIST","MAP","$parent","$","container","parent","setSize","width","height","invalidateSize","setActive","forEach","active","createChartTotals","some","chartTotals","show","totals","getAllRowsData","nodes","arr","node","omit","$$children","concat","updateChart","applyChartType","cols","chartOptions","generateDataForPieChart","sortByOrder","otherData","slice","sum","n","random","applyNamedData","options","series","applyData","applyDataWithCategories","applyScatteredData","enabled","isEmpty","zoomType","panning","panKey","plotOptions","column","stacking","BAR","scrollbar","navigator","line","area","PIE","allowPointSelect","cursor","popupData","is","segmentBy","rowData","graphLimit","takeWhile","isAllowedDataForChartType","chartDisabled","message","inRequestViz","controllerName","linksArrayForList","newMapMarkers","markers","MarkerClusterGroup","singleMarkerMode","disableClusteringAtZoom","iconCreateFunction","cluster","getAllChildMarkers","childCount","DivIcon","html","iconSize","Point","markerClusterGroup","addLayers","l","removeLayer","addLayer","then","newMapChoropleth","addTo","setView","mergedOpt","StockChart","onVizResultsResize","size","exportData","stopPropagation","preventDefault","exportPopup","isopen","isExportRunning","prepareExport","exportChart","updateChartSize","toggleMultiAxis","xAxisShowMeOnRemove","item","xAxisShowMeOnSelect","VIZ","yAxisShowMeOnRemove","yAxisShowMeOnSelect","segmentByOnRemove","segmentByOnSelect","xIndex","findIndex","splice","resetAggs","saveColumnDefs","expandOnDrillDown"],"mappings":"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","file":"../../../../modules/main/directives/viz-chart.js","sourcesContent":["define(['./module', 'highcharts', 'chartCommons', 'leaflet', 'lodash', 'angular', 'common', 'latlon-geohash'], function (directives, Highcharts, chartC, L, _, angular, cc, Geohash) {\n    directives.directive('vizChart', [function() {\n        return {\n            restrict: 'A',\n            templateUrl: 'static/templates/include/viz-directives/viz-chart.html',\n            controller: ['$scope', '$timeout', '$filter', '$compile', '$q', 'CodesService', '$http', 'ExportService', 'DataLoadingService', function($scope, $timeout, $filter, $compile, $q, CodesService, $http, ExportService, DataLoadingService) {\n                var chart, map, mapChoropleth, mapMarkers;\n                var defaultChartOptions = chartC.defaultChartOptions(false, $scope, $timeout, $filter, true);\n                var bounds = L.latLngBounds(L.latLng(-90, -180), L.latLng(90, 180));\n                var CHART_TYPES = chartC.CHART_TYPES;\n                $scope.CHART_TYPE_OPTIONS = cc.getViewModeOptions();\n\n                var ctrlNames = cc.getCtrlNames();\n\n                var getZoom = function(event){\n                    return event.target._zoom;\n                };\n\n                var getPrecisionForZoom = function(zoom){\n                    if(zoom <= 3) {\n                        return 1;\n                    } else if (zoom <= 5) {\n                        return 2;\n                    } else if (zoom <= 7) {\n                        return 3;\n                    } else if (zoom <= 9) {\n                        return 4;\n                    } else if (zoom <= 11) {\n                        return 5;\n                    } else if (zoom <= 14) {\n                        return 6;\n                    } else if (zoom <= 18) {\n                        return 7;\n                    } else if (zoom <= 20) {\n                        return 9;\n                    } else {\n                        return 10;\n                    }\n                };\n\n                var getRectangle = function (zoom, bbox) {\n                    if (zoom > 2) {\n                        return {\n                            top_left: {lat: bbox._northEast.lat, lon: bbox._southWest.lng},\n                            bottom_right: {lat: bbox._southWest.lat, lon: bbox._northEast.lng}\n                        }\n                    }\n                };\n\n                var setZoom = _.debounce(function(event){\n                    var codeType = $scope.colsTypes[$scope.vizSummary.xAxisShows[0].field].toLowerCase();\n                    var agg = $scope.dataSummary.aggs[0];\n                    if(agg) {\n                        if (codeType == 'location_lat_lon') {\n                            var zoom = getZoom(event),\n                                precision = getPrecisionForZoom(zoom);\n                            if (precision != $scope.dataSummary.aggs[0].precision) {\n                                $scope.dataSummary.aggs[0].precision = precision;\n                                agg.box = getRectangle(zoom, map.getBounds());\n                                $scope.searching();\n                            }\n                        } else {\n                            agg.box = undefined;\n                        }\n                    }\n                }, 500);\n\n                var setPan = _.debounce(function(event) {\n                    var codeType = $scope.colsTypes[$scope.vizSummary.xAxisShows[0].field].toLowerCase();\n                    var agg = $scope.dataSummary.aggs[0];\n                    if (typeof agg != 'undefined') {\n                        if (codeType == 'location_lat_lon') {\n                            agg.box = getRectangle(getZoom(event), map.getBounds());\n                            $scope.searching();\n                        } else {\n                            agg.box = undefined;\n                        }\n                    }\n                }, 500);\n\n                // todo restore\n                // $('document').ready(function () {\n                //     $timeout(function() {\n                //         chart = new Highcharts.Chart(defaultChartOptions);\n                //         map = new L.map('map-container',{\n                //             maxBounds: bounds,\n                //             maxBoundsViscosity: 1.0\n                //         });\n                //         L.Icon.Default.imagePath = '/static/img/leaflet';\n                //         L.tileLayer('//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                //             maxZoom: 21,\n                //             minZoom: 2,\n                //             noWrap: false,\n                //             errorTileUrl: '/static/img/blank.png'\n                //         }).addTo(map);\n                //         map.setView(new L.LatLng(0, 0), 2);\n                //         map.on('zoomend', function(e){\n                //             if($scope.dataSummary.aggs.length) {\n                //                 setZoom(e);\n                //             }\n                //         }).on('dragend', function(e){\n                //             if($scope.dataSummary.aggs.length) {\n                //                 setPan(e);\n                //             }\n                //         })\n                //     })\n                // });\n\n                // no support for categories?\n                // http://api.highcharts.com/highcharts#series<pie>.data\n                function transformNamedData(groups, columns, allData){\n                    if(!columns.length){\n                        return [];\n                    }\n                    var group = groups[0];\n                    var aggIndex = chartC.getAggIndex(groups, $scope.dataSummary.aggs);\n                    var col = _.find(columns, 'active') || columns[0];\n                    return [{name: col.name, key: col.key, data: _(allData)\n                        .filter(function(o) { return col.operation ? $scope.getTreeLevel(o) == aggIndex : true })\n                        .map(function(o){\n                            return {\n                                name: (o.aggregation || o[group.field]),\n                                y: +(o[col.key]),\n                                o: o\n                            }\n                        })\n                        .filter(function(o) { return o.y; })\n                        .value()}]\n                }\n\n                function getYAxisData(columns) {\n                    var yAxis = {};\n\n                    if ($scope.vizSummary.enabledMultiAxis) {\n                        var i = 0;\n\n                        yAxis = _.map(columns, function (col) {\n                            var name = chartC.getFullName(col);\n                            var color = Highcharts.getOptions().colors[i];\n\n                            return {\n                                labels: {\n                                    style: {\n                                        color: color\n                                    },\n                                    useHtml: true\n                                },\n                                title: {\n                                    text: name,\n                                    style: {\n                                        color: color\n                                    }\n                                },\n                                opposite: !(i++ % 2)\n                            };\n                        });\n                    }\n                    return yAxis;\n                }\n\n                $scope.getTreeLevel = function(o){\n                    return $scope.dataSummary.showAggregationTotal ? o.__treeLevel - 1 : o.__treeLevel;\n                };\n\n                function transformData(groups, columns, segments, allData){\n                    // return empty series if still expanding\n                    console.time('segmenting')\n                    var aggIndex = chartC.getAggIndex(groups, $scope.dataSummary.aggs),\n                        col = _.find(columns, 'active') || columns[0];\n                    if(segments.length){\n                        // get 10 top used segments\n                        var segmentIndex = chartC.getAggIndex(segments, $scope.dataSummary.aggs);\n                        var segmentData = _.filter(allData, {'__treeLevel': $scope.dataSummary.showAggregationTotal ? segmentIndex + 1 : segmentIndex});\n                        var counts = _.countBy(segmentData, function(o){\n                            return o[segments[0].key];\n                        });\n                        var topCounts = [];\n                        _.forIn(counts, function(count, value){\n                            topCounts.push({\n                                name: value,\n                                count: count\n                            })\n                        });\n                        var useOther = false;\n                        if(topCounts.length > 10){\n                            useOther = true;\n                        }\n                        _.sortBy(topCounts, 'count');\n                        topCounts = _.take(topCounts, 10);\n                        if(useOther){\n                            topCounts.push({name: '$$other'});\n                        }\n                        //console.log(topCounts);\n                        var segmentsData = {};\n                        _.each(topCounts, function(s){\n                            segmentsData[s.name] = [];\n                        });\n\n                        var currentItem = {'$$other': {value: 0, o: {}}};\n                        var copyCurrent = function(){\n                            _.forIn(segmentsData, function(data, segment){\n                                data.push(currentItem[segment]);\n                            })\n                        };\n\n                        for(var i = 0; i < allData.length; i++){\n                            var o = allData[i];\n                            if($scope.getTreeLevel(o) == aggIndex && i > 0){\n                                copyCurrent();\n                                currentItem = {'$$other': {value: 0, o: {}}};\n                            } else {\n                                if($scope.getTreeLevel(o) == segmentIndex && col && o[col.key]){\n                                    currentItem['$$other'].o[groups[0].key] = o[groups[0].key];\n                                    var segment = o[segments[0].key],\n                                        value = o[col.key];\n                                    if(segmentsData[segment]){\n                                        currentItem[segment] = {value: value, o: o};\n                                    } else {\n                                        currentItem['$$other'].value += value;\n                                    }\n                                }\n                            }\n                        }\n                        if(i > 0) {\n                            copyCurrent();\n                        }\n                        var a = _.map(topCounts, function (s) {\n                            var name = s.name == '$$other' ? 'Other' : s.name;\n                            return {\n                                name: name,\n                                key: segments[0].key,\n                                data: _.map(segmentsData[s.name], function (o) {\n                                    return {\n                                        name: name,\n                                        otherChart: s.name == '$$other',\n                                        y: o ? parseFloat(o.value) : null,\n                                        o: o ? o.o : null\n                                    }\n                                })\n                            };\n                        });\n                        console.timeEnd('segmenting')\n                        return a;\n                    } else {\n                        var i = 0;\n\n                        return _.map(columns, function (col) {\n                            var name = chartC.getFullName(col),\n                                type = undefined;\n                            switch($scope.vizSummary.seriesType[col.key]){\n                                case CHART_TYPES.LINE:\n                                    type = 'line';\n                                    break;\n                                case CHART_TYPES.AREA:\n                                    type = 'area';\n                                    break;\n                                case CHART_TYPES.COLUMN:\n                                    type = 'column';\n                                    break;\n                            }\n                            var obj =  {\n                                name: name,\n                                type: type,\n                                key: col.key,\n                                data: _(allData)\n                                    .filter(function (o) {\n                                        return col.operation ? $scope.getTreeLevel(o) == aggIndex : true\n                                    })\n                                    .map(function (o) {\n                                        return {\n                                            name: name,\n                                            y: o[col.key] ? parseFloat(o[col.key]) : null,\n                                            o: o\n                                        }\n                                    })\n                                    .value()\n                            };\n\n                            if ($scope.vizSummary.enabledMultiAxis) {\n                                obj = _.merge(obj, { yAxis: i++ });\n                            }\n                            return obj;\n                        });\n                    }\n                }\n\n                function getCategories(groups, allData){\n                    if(groups.length){\n                        var aggIndex = chartC.getAggIndex(groups, $scope.dataSummary.aggs);\n                        return _(allData).filter(function(o){\n                            return $scope.getTreeLevel(o) == aggIndex;\n                        }).map(function(o){\n                            return (o[groups[0].field] || o.aggregation);\n                        }).value();\n                    }\n                    return [];\n                }\n\n                function getCategoriesFromRawData(xAxisItems, allData, yAxisItems){\n                    if($scope.vizSummary.chartType != CHART_TYPES.SCATTER && xAxisItems.length){\n                        return _(allData).map(function(o){\n                            return (o[xAxisItems[0].field] || o.aggregation);\n                        }).uniq().value();\n                    } else if($scope.vizSummary.chartType == CHART_TYPES.SCATTER) {\n                        var str;\n                        if($scope.dataSummary.aggs.length) {\n                            str = [xAxisItems[0].showListView + \" \" + xAxisItems[0].name + \" & \" + yAxisItems[0].showListView + \" \" + yAxisItems[0].name]\n                        } else {\n                            str = [xAxisItems[0].showListView + \" & \" + yAxisItems[0].showListView];\n                        }\n                        return str;\n                    }\n                }\n\n                function transformScatteredData(groups, columns, allData){\n                    var categories = getCategoriesFromRawData(groups, allData, columns);\n\n                    var obj = _.map(categories, function (cat) {\n                        var col1 = groups[0], col2 = columns[0],\n                            catData = _(allData).map(function (o) {\n                                if(o[col1.key] && o[col2.key]) {\n                                    return {\n                                        x: parseFloat(o[col1.key].toFixed(2)),\n                                        y: parseFloat(o[col2.key].toFixed(2)),\n                                        o: o\n                                    }\n                                }\n                            }).value();\n                        _.remove(catData, function(o) {\n                            return typeof o == 'undefined';\n                        })\n                        return {name: '' + cat, data: _.sortBy(catData, function(o) {\n                            return o.x;\n                        })}\n                    });\n\n                    if ($scope.vizSummary.regressionType != null) {\n                        var col1 = groups[0], col2 = columns[0];\n                        _.remove(allData, function(o) {\n                            return o[col1.key] == null || o[col2.key] == null\n                        })\n                        var regressiveObj = _.map(categories, function (cat) {\n                            var catData = _(allData).map(function (o) {\n                                return [\n                                    o[col1.key],\n                                    o[col2.key]\n                                ]\n                            }).value();\n\n                            // TODO: uncomment in vistualizationCtrl\n                            var type = $scope.REGRESSION_TYPE_OPTIONS[$scope.vizSummary.regressionType].desc.toLowerCase();\n\n                            var regData = regression(type, catData);\n\n                            var data = _.sortBy(_.map(regData.points, function (o, i) {\n                                return {\n                                    x: !isNaN(o[0]) && angular.isNumber(o[0]) ? +o[0].toFixed(2) : o[0],\n                                    y: !isNaN(o[1]) && angular.isNumber(o[1]) ? +o[1].toFixed(2) : o[1],\n                                    o: allData[i]\n                                }\n                            }), 'x');\n\n                            if(!data.length) return {name: 'Loading...'};\n\n                            return chartC.calculateCoordsForRegressions(data, $scope.vizSummary.regressionType, regData, allData);\n                        });\n\n                        obj.push(regressiveObj[0]);\n                    }\n\n                    return obj;\n                }\n\n                $scope.resizeChart = function(){\n                    if(!chart || !chart.xAxis) return;\n                    if($scope.vizSummary.chartType != CHART_TYPES.TABLE && $scope.vizSummary.chartType != CHART_TYPES.LIST) {\n                        if ($scope.vizSummary.chartType != CHART_TYPES.MAP && $scope.vizSummary.yAxisShows.length) {\n                            var $parent = $(chart.container).parent();\n                            chart.setSize($parent.width(), $parent.height(), false)\n                        } else {\n                            map.invalidateSize();\n                        }\n                    }\n                }\n\n                $scope.setActive = function(key) {\n                    $scope.vizSummary.yAxisShows.forEach(function(el) {\n                        el.active = el.key == key;\n                    });\n                }\n\n                $scope.createChartTotals = function(){\n                    // set active metric as first one if not set already\n                    if ($scope.vizSummary.yAxisShows.length\n                        && !_.some($scope.vizSummary.yAxisShows, {active: true})) {\n                        $scope.setActive($scope.vizSummary.yAxisShows[0].key);\n                    }\n\n                    $scope.chartTotals = _.map($scope.vizSummary.yAxisShows, function (show) {\n                        return $scope.totals ? {name: chartC.getFullName(show), key: show.key, show: show, total: $scope.totals[show.key]} : {};\n                    })\n                }\n\n                function tooltipHTML() {\n                    return '<div ng-mousemove=\"$event.stopPropagation()\" class=\"custom-tooltip\">\\n    <div class=\"tooltip-header\">\\n        <span><strong ng-bind=\"chartTooltip.mapData.name\"></strong> : {{chartTooltip.mapData.value}}</span>\\n    </div>\\n    <div>\\n        <div class=\"dropdown-menu-right\">\\n            <div class=\"dropdown-submenu\">\\n                <div class=\"drill-in-menu-item\" ng-click=\"$event.stopPropagation()\"><strong>Drill in</strong> by</div>\\n                <ul class=\"dropdown-menu drill-in-menu\" ng-style=\"{\\'border-color\\': chartTooltip.color}\">\\n                    <li ng-repeat=\"intoColumn in filterList\" ng-if=\"intoColumn.name != chartTooltip.byColumn.name\">\\n                        <a ng-click=\"drillDown(chartTooltip.byColumn, chartTooltip.byValue, intoColumn, true, chartTooltip.row)\"\\n                           class=\"drill-in-menu-item\">\\n                            {{humanize(intoColumn.name)}}</a>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\"drill-in-menu-item\" ng-click=\"selectFromResults(chartTooltip.byColumn, chartTooltip.byValue, false, chartTooltip.row)\">\\n                <strong>Filter</strong> to value\\n            </div>\\n            <div class=\"drill-in-menu-item\" ng-click=\"selectFromResultsRemove(chartTooltip.byColumn, chartTooltip.byValue, chartTooltip.row)\">\\n                <strong>Exclude</strong> this value\\n            </div>\\n            <div class=\"drill-in-menu-item\" ng-click=\"openModalFromTooltip(chartTooltip)\">\\n                <strong>View</strong> data\\n            </div>\\n        </div>\\n    </div>\\n</div>';\n                }\n\n                function transformLatLonMapData(groups, columns, data) {\n                    var popup = L.popup({closeButton: false, className: 'map-popup', maxWidth:500})\n                        .setContent($compile(angular.element(tooltipHTML()))($scope)[0]);\n\n                    return _(data).filter(function(o){\n                        return o[groups[0].field];\n                    }).map(function(o){\n                        var coors;\n                        if($scope.dataSummary.aggs.length){\n                            coors = Geohash.decode(o[groups[0].field]);\n                            coors = {lat: coors.lat, lon: coors.lon};\n                        } else {\n                            coors = {lat: o[groups[0].field][0], lon: o[groups[0].field][1]};\n                        }\n                        var marker = L.marker(new L.LatLng(coors.lat, coors.lon), {data: o});\n                        marker.bindPopup(popup);\n                        marker.on('click', function(e){\n                            $scope.$apply(function(){\n                                var key = _.find($scope.gridApi.grid.columns, {name: groups[0].field});\n                                $scope.chartTooltip.popup = popup;\n                                $scope.chartTooltip.viewData = false;\n                                $scope.chartTooltip.values = _.map($scope.gridOptions.columnDefs, function(col){\n                                    var value = o[col.name];\n                                    return {name: col.displayName, value: value}\n                                });\n                                $scope.chartTooltip.row = key ? undefined : {entity: o};\n                                $scope.chartTooltip.byColumn = key;\n                                $scope.chartTooltip.byValue = o[groups[0].field];\n\n\n\n                                var name = o.aggregation || o[$scope.vizSummary.xAxisShows[0].key];\n                                if (Array.isArray(name) ) {\n                                    name = name[0].toFixed(2) + ', ' + name[1].toFixed(2);\n                                }\n\n                                $scope.chartTooltip.mapData = {\n                                    name: name,\n                                    value: o[$scope.vizSummary.yAxisShows[0].key]\n                                }\n                            });\n                            $timeout(function(){\n                                popup.update();\n                            })\n                        });\n                        return marker;\n                    }).value();\n                }\n\n                function getCommonCountryCodesData(codeKey, valueKey, data) {\n                    return _.map(data, function(el) {\n\n                        var code = el[codeKey];\n                        if (code.toUpperCase() != code) {\n                            code = code.toUpperCase();\n                        }\n\n                        if (code.length != 3) {\n                            code = CodesService.getReverseCode(code);\n                        }\n\n                        return {\n                            code: code,\n                            value: el[valueKey],\n                            o: el,\n                            key: codeKey\n                        };\n                    });\n                }\n\n                function transformAreasMapData(codeType, groups, columns, allData) {\n                    var deferred = $q.defer(),\n                        col = _.find(columns, 'active') || columns[0],\n                        codeKey = groups[0].field,\n                        valueKey = col.key,\n                        keyType = 'id', mapType, data,\n                        aggIndex = chartC.getAggIndex(groups, $scope.dataSummary.aggs);\n                    switch(codeType){\n                        case 'location_usa_state_codes':\n                            mapType = 'us-states';\n                            break;\n                        case 'location_country_codes':\n                            mapType = 'countries';\n                            break;\n                        default:\n                            throw \"Unknow map type: \" + codeType;\n                    }\n                    data = _.filter(allData, function(o) { return col.operation ? $scope.getTreeLevel(o) == aggIndex : true })\n                    if (codeType == 'location_country_codes') {\n                        data = getCommonCountryCodesData(codeKey, valueKey, data);\n                    } else {\n                        data = _.map(data, function(el) {\n                            return {\n                                code: el[codeKey].toUpperCase(),\n                                value: el[valueKey],\n                                o: el,\n                                key: codeKey\n                            };\n                        });\n                    }\n                    $http.get('static/geo/maps/' + mapType + '.geo.json', {cache : true})\n                        .success(function(areasData){\n                            // control that shows state info on hover\n                            var info = L.control();\n\n                            info.onAdd = function (map) {\n                                this._div = L.DomUtil.create('div', 'map-info detailed');\n                                this.update();\n                                return this._div;\n                            };\n\n                            info.update = function (props) {\n                                this._div.innerHTML = '<h4>' + col.showName + '</h4>' +  (props ?\n                                    '<b>' + props.name + '</b><br />' + (props.value ? props.value : '-')\n                                        : 'Hover over a ' + (codeType == 'location_country_codes' ? 'country' : 'state'));\n                            };\n\n                            // TODO: Uncomment this with tinycolor lib\n                            var range = [], //cc.createColorRange(tinycolor('#FFEDA0'), tinycolor('#800026')),\n                                minValue = round(_.min(data, 'value').value),\n                                maxValue = round(_.max(data, 'value').value);\n                            if(maxValue == minValue){\n                                maxValue += 100;\n                            }\n                            var delta = maxValue - minValue;\n\n                            function getColor(d) {\n                                return d ? range[Math.floor(((d - minValue) / delta) * (range.length - 1))] : undefined;\n                            }\n\n                            function style(feature) {\n                                return {\n                                    weight: 2,\n                                    opacity: 1,\n                                    color: 'white',\n                                    dashArray: '3',\n                                    fillOpacity: feature.properties.value ? 0.7 : 0,\n                                    fillColor: getColor(feature.properties.value)\n                                };\n                            }\n\n                            function round(value){\n                                if(value > 1) {\n                                    var roundTo = 1,//parseInt(value).toString().length,\n                                        c = Math.pow(10, roundTo);\n                                    return Math.round(value / c) * c;\n                                } else {\n                                    return value;\n                                }\n                            }\n\n                            function highlightFeature(e) {\n                                var layer = e.target;\n\n                                layer.setStyle({\n                                    weight: 4,\n                                    color: '#aaa',\n                                    dashArray: ''\n                                });\n\n                                if (!L.Browser.ie && !L.Browser.opera) {\n                                    layer.bringToFront();\n                                }\n\n                                info.update(layer.feature.properties);\n                            }\n\n                            function resetHighlight(e) {\n                                geojson.resetStyle(e.target);\n                                info.update();\n                            }\n\n                            function zoomToFeature(e) {\n                                map.fitBounds(e.target.getBounds());\n                            }\n\n                            var popup = L.popup({closeButton: false, className: 'map-popup',maxWidth:500})\n                                .setContent($compile(angular.element(tooltipHTML()))($scope)[0]);\n\n                            function onEachFeature(feature, layer) {\n                                layer.on({\n                                    mouseover: highlightFeature,\n                                    mouseout: resetHighlight,\n                                    click: function(e){\n                                        if(feature.properties.o) {\n                                            $scope.$apply(function () {\n                                                var key = _.find($scope.gridApi.grid.columns, {name: feature.properties.key});\n                                                $scope.chartTooltip.popup = popup;\n                                                $scope.chartTooltip.viewData = false;\n                                                $scope.chartTooltip.color = '';\n                                                $scope.chartTooltip.values = _.map($scope.gridOptions.columnDefs, function (col) {\n                                                    var value = feature.properties.o[col.name];\n                                                    return {name: col.displayName, value: value}\n                                                });\n                                                $scope.chartTooltip.row = key ? undefined : {entity: feature.properties.o};\n                                                $scope.chartTooltip.byColumn = key;\n                                                $scope.chartTooltip.byValue = feature.properties.o[feature.properties.key];\n                                                $scope.chartTooltip.mapData = {\n                                                    name: feature.properties.name,\n                                                    value: feature.properties.value\n                                                }\n                                            });\n                                            //zoomToFeature(e) todo restore??\n                                        }\n                                    }\n                                });\n                                if(feature.properties.value) {\n                                    layer.bindPopup(popup);\n                                }\n                            }\n\n                            // merge geojson with data by keyType\n                            _.each(areasData.features, function (feature){\n                                var key = feature[keyType],\n                                    o = _.find(data, {code: key});\n                                // todo this needs refactoring\n                                _.merge(feature, {properties: {o: o ? o.o : undefined, key: o ? o.key : undefined, value: o ? o.value : undefined}});\n                            });\n\n                            var geojson = L.geoJson(areasData, {\n                                style: style,\n                                onEachFeature: onEachFeature\n                            });\n\n                            var legend = L.control({position: 'bottomright'});\n\n                            legend.onAdd = function (map) {\n\n                                var div = L.DomUtil.create('div', 'map-info legend'),\n                                    grades = [],\n                                    labels = [],\n                                    from, to,\n                                    total = 8;\n                                var i, step = (maxValue - minValue) / total;\n                                for(i = 0; i < total; i++){\n                                    grades.push(round(minValue + i * step));\n                                }\n                                for (i = 0; i < grades.length; i++) {\n                                    from = grades[i];\n                                    to = grades[i + 1];\n                                    labels.push(\n                                        '<i style=\"background:' + getColor(from + 1) + '\"></i> ' +\n                                        from + (to ? '&ndash;' + to : '+'));\n                                }\n\n                                div.innerHTML = labels.join('<br>');\n                                return div;\n                            };\n                            deferred.resolve([geojson, legend, info]);\n                        });\n\n                    return deferred.promise;\n                }\n\n                getAllRowsData = function(nodes) {\n                    var arr = _.map(nodes, function (node) {\n                        return _.omit(node, '$$children');\n                    });\n\n\n                    _.forEach(nodes, function (node) {\n                        if (node.$$children.length) {\n                            arr = arr.concat(getAllRowsData(node.$$children))\n                        }\n                    });\n\n                    return arr;\n                }\n\n                $scope.updateChart = function (){\n                    if($scope.popupData && $scope.popupData.is) return;\n\n                    function applyChartType(type, groups, cols, segments, data, chartOptions){\n\n                        function generateDataForPieChart(data) {\n                            data[0].data = _.sortByOrder(data[0].data, ['y'], ['desc']);\n\n                            if(data[0].data.length > 10) {\n                                var otherData = data[0].data.slice(10);\n                                data[0].data = data[0].data.slice(0, 10);\n\n                                data[0].data.push({\n                                    name: \"Other\",\n                                    y: _.sum(otherData, function(n) {\n                                        return n.y;\n                                    }),\n                                    otherChart: true,\n                                    color: 'rgb(' + Math.floor(Math.random() * 200) + ', ' + Math.floor(Math.random() * 200) + ', ' + Math.floor(Math.random() * 200) + ')'\n                                })\n                            }\n\n                            return data;\n                        }\n\n                        function applyNamedData(options) {\n                            return _.merge({}, options, {\n                                series: generateDataForPieChart(transformNamedData(groups, cols, data))\n                            })\n                        }\n\n                        function applyData(options){\n                            return _.merge({}, options, {\n                                yAxis: getYAxisData(cols),\n                                series: transformData(groups, cols, segments, data)\n                            });\n                        }\n\n                        function applyDataWithCategories(options){\n                            return _.merge({}, options, {\n                                xAxis: {\n                                    categories: getCategories(groups, data)\n                                },\n                                yAxis: getYAxisData(cols),\n                                series: transformData(groups, cols, segments, data)\n                            });\n                        }\n\n                        function applyScatteredData(options) {\n                            var col1 = groups[0], col2 = cols[0];\n                            return _.merge({}, options, {\n                                xAxis: {\n                                    title: {\n                                        enabled: true,\n                                        text: col1.name\n                                    }\n                                },\n                                yAxis: {\n                                    title: {\n                                        text: col2.name\n                                    }\n                                },\n                                series: transformScatteredData(groups, cols, data)\n                            })\n                        }\n\n                        // clear map rectangle filter\n                        if (type !== CHART_TYPES.MAP && !_.isEmpty($scope.dataSummary.aggs)) {\n                            var agg = $scope.dataSummary.aggs[0];\n                            if (agg.box) {\n                                delete agg.box;\n                                $scope.searching();\n                            }\n                        }\n\n                        switch (type) {\n                            case CHART_TYPES.COLUMN:\n                                return _.merge({}, applyDataWithCategories(chartOptions), {\n                                    chart: {\n                                        type: 'column',\n                                        zoomType: 'x',\n                                        panning: true,\n                                        panKey: 'shift'\n                                    },\n                                    plotOptions: {\n                                        column: {\n                                            stacking: segments.length ? 'normal' : null\n                                        }\n                                    }\n                                });\n                            case CHART_TYPES.BAR:\n                                return _.merge({}, applyDataWithCategories(chartOptions), {\n                                    chart: {\n                                        type: 'bar',\n                                        zoomType: 'x',\n                                        panning: true,\n                                        panKey: 'shift'\n                                    },\n                                    plotOptions: {\n                                        series: {\n                                            stacking: segments.length ? 'normal' : null\n                                        }\n                                    },\n                                    scrollbar: {enabled: false},\n                                    navigator: {enabled: false}\n                                });\n                            case CHART_TYPES.LINE:\n                                return _.merge({}, applyData(chartOptions), {\n                                    chart: {\n                                        type: 'line',\n                                        zoomType: 'x',\n                                        panning: true,\n                                        panKey: 'shift'\n                                    },\n                                    plotOptions: {\n                                        line: {\n                                            stacking: segments.length ? 'normal' : null\n                                        }\n                                    }\n                                });\n                            case CHART_TYPES.AREA:\n                                return _.merge({}, applyData(chartOptions), {\n                                    chart: {\n                                        type: 'area',\n                                        zoomType: 'x',\n                                        panning: true,\n                                        panKey: 'shift'\n                                    },\n                                    plotOptions: {\n                                        area: {\n                                            stacking: segments.length ? 'normal' : null\n                                        }\n                                    }\n                                });\n                            case CHART_TYPES.PIE:\n                                return _.merge({}, applyNamedData(chartOptions), {\n                                    chart: {\n                                        type: 'pie'\n                                    },\n                                    plotOptions: {\n                                        series: {\n                                            allowPointSelect: true,\n                                            cursor: 'pointer'\n                                        }\n                                    },\n                                    scrollbar: {enabled: false},\n                                    navigator: {enabled: false}\n                                });\n                            case CHART_TYPES.SCATTER:\n                                return _.merge({}, applyScatteredData(chartOptions), {\n                                    chart: {\n                                        type: 'scatter',\n                                        zoomType: 'x'\n                                    }\n                                });\n                            case CHART_TYPES.TABLE:\n                            case CHART_TYPES.LIST:\n                                break;\n                            default:\n                                throw \"Unknown chart type: \" + type;\n                        }\n                    }\n\n                    var groups = _.filter($scope.vizSummary.xAxisShows, function(s){\n                        return s.field != '$$row_number';\n                    });\n                    var cols = $scope.vizSummary.yAxisShows;\n                    var segments = $scope.vizSummary.segmentBy;\n\n                    var data = $scope.dataSummary.aggs.length\n                        ? $scope.getAllRowsData($scope.gridOptions.rowData)\n                        : $scope.gridOptions.data;\n                    if($scope.vizSummary.graphLimit > 0){\n                        if($scope.dataSummary.aggs.length && $scope.vizSummary.xAxisShows.length){\n                            var aggIndex = chartC.getAggIndex($scope.vizSummary.xAxisShows, $scope.dataSummary.aggs),\n                                i = 0;\n                            data = _.takeWhile(data, function(o){ return $scope.getTreeLevel(o) != aggIndex || i++ < $scope.vizSummary.graphLimit})\n                        } else {\n                            data = _.take(data, $scope.vizSummary.graphLimit);\n                        }\n                    }\n\n                    if(!$scope.isAllowedDataForChartType($scope.vizSummary.chartType, $scope, $scope.colsTypes)){\n                        $scope.chartDisabled = {\n                            message: cc.getViewModeOptions()[$scope.vizSummary.chartType].e\n                        };\n                        $scope.inRequestViz = false;\n                        return;\n                    } else {\n\n                        if ($scope.vizSummary.yAxisShows.length) {\n                            $timeout(function () {\n                                if($scope.controllerName != 'embedPopupCtrl') $scope.resizeChart();\n                            }, 100);\n                        }\n                        $scope.chartDisabled = null;\n                    }\n\n                    $scope.isArray = function(str) {\n                        return _.isArray(str);\n                    };\n\n                    $scope.linksArrayForList = function(arr) {\n                        return cc.linksArrayForList(arr);\n                    };\n\n                    $scope.createChartTotals();\n                    if($scope.vizSummary.chartType == CHART_TYPES.MAP){\n                        var codeType = $scope.colsTypes[groups[0].field].toLowerCase();\n                        if(codeType == 'location_lat_lon') {\n                            var markers = transformLatLonMapData(groups, cols, data),\n                                newMapMarkers;\n\n                            if($scope.dataSummary.aggs.length) {\n                                newMapMarkers = new L.MarkerClusterGroup({\n                                    singleMarkerMode: true,\n                                    disableClusteringAtZoom: 1,\n                                    iconCreateFunction: function (cluster) {\n                                        var markers = cluster.getAllChildMarkers(),\n                                            childCount = markers[0] ? markers[0].options.data['$$cluster_size'] : 1;\n                                        var c = ' marker-cluster-';\n                                        if (childCount < 10) {\n                                            c += 'small';\n                                        } else if (childCount < 100) {\n                                            c += 'medium';\n                                        } else {\n                                            c += 'large';\n                                        }\n\n                                        return new L.DivIcon({\n                                            html: '<div><span>' + childCount + '</span></div>',\n                                            className: 'marker-cluster' + c,\n                                            iconSize: new L.Point(40, 40)\n                                        });\n                                    }\n                                })\n                            } else {\n                                newMapMarkers = L.markerClusterGroup();\n                            }\n                            newMapMarkers.addLayers(markers);\n                            if(mapChoropleth) {\n                                _.each(mapChoropleth, function(l) {l.remove() });\n                            }\n                            if(mapMarkers) {\n                                map.removeLayer(mapMarkers);\n                            }\n                            mapMarkers = newMapMarkers;\n                            map.addLayer(mapMarkers);\n                        } else {\n                            transformAreasMapData(codeType, groups, cols, data)\n                                .then(function(newMapChoropleth){\n                                    if(mapChoropleth) {\n                                        _.each(mapChoropleth, function(l) {l.remove() });\n                                    }\n                                    if(mapMarkers) {\n                                        map.removeLayer(mapMarkers);\n                                    }\n                                    mapChoropleth = newMapChoropleth;\n                                    _.each(mapChoropleth, function(l) { l.addTo(map) })\n                                    // usa view bbox\n                                    if(codeType == 'location_usa_state_codes') {\n                                        map.setView([37.8, -96], 4);\n                                    } else if(codeType == 'location_country_codes') {\n                                        map.setView(new L.LatLng(0, 0), 2);\n                                    }\n                                });\n                        }\n                        $scope.inRequestViz = false\n                    } else {\n                        $scope.chartOptions = applyChartType($scope.vizSummary.chartType, groups, cols, segments, data, {});\n                        var mergedOpt = _.merge({}, defaultChartOptions, $scope.chartOptions);\n                        chart = new Highcharts.StockChart(mergedOpt);\n                    }\n                }\n\n                $scope.onVizResultsResize = function (size) {\n                    if($scope.vizSummary.chartType != CHART_TYPES.TABLE && $scope.vizSummary.chartType != CHART_TYPES.LIST) {\n                        if ($scope.vizSummary.chartType != CHART_TYPES.MAP && $scope.vizSummary.yAxisShows.length) {\n                            chart.setSize(size.width, size.height, false);\n                        } else {\n                            map.invalidateSize();\n                        }\n                    }\n                };\n\n                $scope.exportData = function(e, type) {\n                    e.stopPropagation();\n                    e.preventDefault();\n\n                    if ($scope.exportPopup) {\n                        $scope.exportPopup.isopen = !$scope.exportPopup.isopen;\n                    }\n\n                    if(type == \"CSV\" || type == \"XLS\") {\n                        $scope.isExportRunning = true;\n\n                        ExportService.prepareExport(type, $scope, true);\n                    }\n                    else chart.exportChart({type: type});\n                };\n\n                $scope.updateChartSize = function() {\n                    if (chart) {\n                        var $parent = $(chart.container).parent();\n                        chart.setSize($parent.width(), $parent.height(), false)\n                    }\n                };\n\n                $scope.isAllowedDataForChartType = chartC.isAllowedDataForChartType;\n\n                $scope.toggleMultiAxis = function () {\n                    $scope.vizSummary.enabledMultiAxis = !$scope.vizSummary.enabledMultiAxis;\n\n                    $scope.updateChart();\n                    // if($scope.controllerName == ctrlNames.VIZ) stateSaver.saveGraphSettings();\n                };\n\n                $scope.xAxisShowMeOnRemove = function (item) {\n                    _.remove($scope.vizSummary.xAxisShows, {key: item.key});\n                    $scope.chartDisabled = null;\n                    $timeout(function () {\n                        if ($scope.vizSummary.yAxisShows.length) $scope.resizeChart();\n                    }, 100);\n                    // DataLoadingService.refreshXAxisShows($scope);\n                    $scope.updateChart();\n                    // if($scope.controllerName == ctrlNames.VIZ) stateSaver.saveGraphSettings();\n                };\n\n                $scope.xAxisShowMeOnSelect = function (item) {\n                    $scope.vizSummary.xAxisShows = [item];\n                    $scope.updateChart();\n                    if($scope.controllerName == ctrlNames.VIZ) {\n                        // if($scope.controllerName == ctrlNames.VIZ) stateSaver.saveGraphSettings();\n                    }\n                };\n\n                $scope.yAxisShowMeOnRemove = function (item) {\n                    _.remove($scope.vizSummary.yAxisShows, {key: item.key});\n                    // DataLoadingService.refreshYAxisShows($scope);\n                    $scope.updateChart();\n                    // if($scope.controllerName == ctrlNames.VIZ) stateSaver.saveGraphSettings();\n                };\n\n                $scope.yAxisShowMeOnSelect = function (item) {\n                    if($scope.vizSummary.chartType == CHART_TYPES.SCATTER) $scope.vizSummary.yAxisShows = [item];\n                    $scope.updateChart();\n                    // if($scope.controllerName == ctrlNames.VIZ) stateSaver.saveGraphSettings();\n                };\n\n                $scope.segmentByOnRemove = function (item) {\n                    $scope.vizSummary.segmentBy = [];\n                    $scope.updateChart();\n                    // if($scope.controllerName == ctrlNames.VIZ) stateSaver.saveGraphSettings();\n                };\n\n                $scope.segmentByOnSelect = function (item) {\n                    $scope.vizSummary.segmentBy = [item];\n                    _.remove($scope.dataSummary.aggs, {key: item.key});\n                    var xIndex = _.findIndex($scope.dataSummary.aggs, {key: $scope.vizSummary.xAxisShows[0].key});\n                    $scope.dataSummary.aggs.splice(xIndex + 1, 0, item);\n                    DataLoadingService.resetAggs($scope.dataSummary.aggs, $scope);\n                    $scope.vizSummary.chartType = CHART_TYPES.COLUMN;\n                    $scope.vizSummary.seriesType = {};\n                    // if($scope.controllerName == ctrlNames.VIZ) stateSaver.saveGraphSettings();\n                    $scope.saveColumnDefs();\n                    $scope.expandOnDrillDown = true;\n                    $scope.searching();\n                };\n            }]\n        }\n    }]);\n});"]}